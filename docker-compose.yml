version: '3.8'

services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: feiraslondrina
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - internal

  backend:
    build:
      context: ./back
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/feiraslondrina
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db
    networks:
      - internal
    expose:
      - '8080'

  frontend:
    build:
      context: ./front
      args:
        BACK_DOMAIN: ${BACK_DOMAIN}
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - internal
    expose:
      - '80'

  nginx:
    image: nginx:stable
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/templates/nginx.conf.template:ro
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    environment:
      - FRONT_DOMAIN=${FRONT_DOMAIN}
      - BACK_DOMAIN=${BACK_DOMAIN}
    command: /bin/sh -c "envsubst '$$FRONT_DOMAIN $$BACK_DOMAIN' < /etc/nginx/templates/nginx.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - frontend
      - backend
    ports:
      - '80:80'
      - '443:443'
    networks:
      - internal

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    entrypoint: ""
    command: "true"
    networks:
      - internal

networks:
  internal:

volumes:
  db-data:
